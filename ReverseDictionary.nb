(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    370277,       6663]
NotebookOptionsPosition[    362566,       6469]
NotebookOutlinePosition[    362908,       6484]
CellTagsIndexPosition[    362865,       6481]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Small dataset", "Section",
 CellChangeTimes->{{3.7076084777779646`*^9, 
  3.7076084820846777`*^9}},ExpressionUUID->"651c5174-9df5-4517-be59-\
22ae51e45987"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wordList", "=", 
   RowBox[{"WordList", "[", 
    RowBox[{"\"\<Noun\>\"", ",", 
     RowBox[{"Language", "\[Rule]", "\"\<English\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7076084877268243`*^9, 3.707608499498101*^9}, 
   3.707752342345785*^9},ExpressionUUID->"6a77e2a6-e336-4963-ab87-\
f6e8ca9d03d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"randSample", "=", 
  RowBox[{"RandomSample", "[", 
   RowBox[{"wordList", ",", "10"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"randSample", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<enthalpy\>\"", ",", "\"\<yuppie\>\"", ",", "\"\<packsaddle\>\"", 
      ",", "\"\<tearfulness\>\"", ",", "\"\<sultanate\>\"", ",", 
      "\"\<discipline\>\"", ",", "\"\<pocketful\>\"", ",", "\"\<suede\>\"", 
      ",", "\"\<beta\>\"", ",", "\"\<tee\>\""}], "}"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.7076085076679506`*^9, 3.707608523024809*^9}, {
  3.7076828250849776`*^9, 3.7076828354042463`*^9}, {3.7077382322649465`*^9, 
  3.7077382431634235`*^9}},ExpressionUUID->"67493797-de1e-48cf-bd40-\
84f1b6316537"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"souk\"\>", ",", "\<\"leafing\"\>", 
   ",", "\<\"childlessness\"\>", ",", "\<\"purine\"\>", 
   ",", "\<\"exclusive\"\>", ",", "\<\"bracken\"\>", ",", "\<\"accusal\"\>", 
   ",", "\<\"palsy\"\>", ",", "\<\"cutlery\"\>", ",", "\<\"hexagon\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.707608524184294*^9, 3.707608534745445*^9}, 
   3.707682836999235*^9, 3.707696232653717*^9, 3.7076979452895713`*^9, 
   3.707738244265872*^9, 3.707738337172966*^9, 
   3.7077715879462395`*^9},ExpressionUUID->"60f9f0d1-8590-444a-9d7c-\
12f4313c95b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["WordData", "Subsubsection",
 CellChangeTimes->{{3.7076637756800585`*^9, 
  3.707663777341203*^9}},ExpressionUUID->"d45502bf-2883-4330-b8e3-\
b47cfcf41075"],

Cell[BoxData[
 RowBox[{
  RowBox[{"definitions", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"WordDefinition", "[", "#", "]"}], "&"}], "/@", "randSample"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7076085945061903`*^9, 3.707608609968317*^9}, 
   3.7076094217791452`*^9},ExpressionUUID->"d85cdac3-0a05-49fe-8842-\
de447922d89a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"defWord", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", "#", "]"}], "&"}], "/@", 
    RowBox[{"Thread", "[", 
     RowBox[{"definitions", "\[Rule]", " ", "randSample"}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707608942601387*^9, 3.7076089917757053`*^9}, 
   3.707609065174761*^9, 3.707609262622531*^9, {3.7076093103881283`*^9, 
   3.7076093494448724`*^9}},ExpressionUUID->"f64781d2-35b5-47e8-9ca5-\
4e76c3fa9146"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"an open-air market in an Arabian city\"\>", 
    "\[Rule]", "\<\"souk\"\>"}], ",", 
   RowBox[{"\<\"(botany) the process of forming leaves\"\>", 
    "\[Rule]", "\<\"leafing\"\>"}], ",", 
   RowBox[{"\<\"the condition of being without offspring\"\>", 
    "\[Rule]", "\<\"childlessness\"\>"}], ",", 
   RowBox[{"\<\"a colorless crystalline organic base containing nitrogen; the \
parent compound of various biologically important substances\"\>", 
    "\[Rule]", "\<\"purine\"\>"}], ",", 
   RowBox[{"\<\"any of several bases that are derivatives of purine\"\>", 
    "\[Rule]", "\<\"purine\"\>"}], ",", 
   RowBox[{"\<\"a news report that is reported first by one news organization\
\"\>", "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"not divided among or brought to bear on more than one object \
or objective\"\>", "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"excluding much or all; especially all but a particular group \
or minority\"\>", "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"not divided or shared with others\"\>", 
    "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"large coarse fern often several feet high; essentially weed \
ferns; cosmopolitan\"\>", "\[Rule]", "\<\"bracken\"\>"}], ",", 
   RowBox[{"\<\"fern of southeastern Asia; not hardy in cold temperate \
regions\"\>", "\[Rule]", "\<\"bracken\"\>"}], ",", 
   RowBox[{"\<\"a formal charge of wrongdoing brought against a person; the \
act of imputing blame or guilt\"\>", "\[Rule]", "\<\"accusal\"\>"}], ",", 
   RowBox[{"\<\"a condition marked by uncontrollable tremor\"\>", 
    "\[Rule]", "\<\"palsy\"\>"}], ",", 
   RowBox[{"\<\"loss of the ability to move a body part\"\>", 
    "\[Rule]", "\<\"palsy\"\>"}], ",", 
   RowBox[{"\<\"affect with palsy\"\>", "\[Rule]", "\<\"palsy\"\>"}], ",", 
   RowBox[{"\<\"tableware implements for cutting and eating food\"\>", 
    "\[Rule]", "\<\"cutlery\"\>"}], ",", 
   RowBox[{"\<\"a cutting implement; a tool for cutting\"\>", 
    "\[Rule]", "\<\"cutlery\"\>"}], ",", 
   RowBox[{"\<\"a six-sided polygon\"\>", "\[Rule]", "\<\"hexagon\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7076089835335627`*^9, 3.707608992260277*^9}, {
   3.707609067272371*^9, 3.7076090740641165`*^9}, 3.7076093196629047`*^9, 
   3.7076093498065186`*^9, 3.7076828483842683`*^9, 3.707697963373597*^9, {
   3.7077383176701007`*^9, 3.7077383396923485`*^9}, {3.7077715932991447`*^9, 
   3.707771602764982*^9}},ExpressionUUID->"a43a18a2-23d3-4bb9-be52-\
e7c7a0048fbb"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Wikipedia Data", "Subsubsection",
 CellChangeTimes->{{3.7076637859105988`*^9, 
  3.707663789019145*^9}},ExpressionUUID->"a2916cdd-a78e-4496-ad19-\
4a2ffa998215"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"wiki", "=", 
  RowBox[{"Select", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"TextSentences", "[", 
         RowBox[{"WikipediaData", "[", "#", "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", " ", "#"}], "&"}], "/@", 
     "randSample"}], ",", 
    RowBox[{
     RowBox[{"Not", "[", 
      RowBox[{"MissingQ", "[", 
       RowBox[{"First", "[", "#", "]"}], "]"}], "]"}], "&"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.707658170644786*^9, 3.70765820477357*^9}, {
  3.7076588695139976`*^9, 3.7076588709483657`*^9}, {3.707658940096953*^9, 
  3.707658941446412*^9}, {3.70765920381929*^9, 3.7076592106896515`*^9}, {
  3.707659244552226*^9, 3.7076592487958*^9}, {3.7076593268399143`*^9, 
  3.7076594442060347`*^9}, {3.707659526717495*^9, 
  3.7076595279265394`*^9}},ExpressionUUID->"fa7b79bb-7e61-4901-b72d-\
2a599ba07d3b"],

Cell[BoxData[
 TemplateBox[{
  "TextSentences","arg1",
   "\"String or ContentObject expected at position 1.\"",2,244,63,
   20705448377557753798,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7076582168556666`*^9, 3.7076588782200794`*^9, 
  3.7076589493109446`*^9, 3.7076592177514544`*^9, 3.70765925789913*^9, 
  3.707659453021719*^9, 3.7076595363579407`*^9, 3.7076828640446215`*^9, 
  3.7076979792733364`*^9, 3.707738356654193*^9, 
  3.7077716236482368`*^9},ExpressionUUID->"cf03604d-08fc-4195-a44a-\
6fa336b7b0b6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"A souq or souk (Arabic: \:0633\:0648\:0642\:200e\:200e, \
Hebrew: \:05e9\:05d5\:05e7\:200e suq, Hindi: \:0938\:0942\:0915, also spelled \
shuk, shooq, soq, esouk, succ, suk, sooq, suq, soek) is a marketplace or \
commercial quarter in Western Asian and North African cities.\"\>", 
    "\[Rule]", "\<\"souk\"\>"}], ",", 
   RowBox[{"\<\"Leaf peeping is an informal term in the United States for the \
activity in which people travel to view and photograph the fall foliage in \
areas where leaves change colors in autumn, particularly in New England.\"\>",
     "\[Rule]", "\<\"leafing\"\>"}], ",", 
   RowBox[{"\<\"Childlessness is a term for people - men and women - having \
no children.\"\>", "\[Rule]", "\<\"childlessness\"\>"}], ",", 
   RowBox[{"\<\"A purine is a heterocyclic aromatic organic compound that \
consists of a pyrimidine ring fused to an imidazole ring.\"\>", 
    "\[Rule]", "\<\"purine\"\>"}], ",", 
   RowBox[{"\<\"Exclusive may refer to:\\nA closed, committed \
relationship\\nAn 'exclusive' or scoop (news), a news story reported by one \
organization before others\\nExclusive (album), by R&B singer Chris \
Brown\\nExclusive (EP), an EP by U2\\nExclusive, a 1937 American \
film\\nExclusive (Malaysian TV series)\"\>", "\[Rule]", "\<\"exclusive\"\>"}],
    ",", 
   RowBox[{"\<\"Bracken (Pteridium) is a genus of large, coarse ferns in the \
family Dennstaedtiaceae.\"\>", "\[Rule]", "\<\"bracken\"\>"}], ",", 
   RowBox[{"\<\"Palsy is a medical term which refers to various types of \
paralysis, often accompanied by weakness and the loss of feeling and \
uncontrolled body movements such as shaking.\"\>", 
    "\[Rule]", "\<\"palsy\"\>"}], ",", 
   RowBox[{"\<\"Cutlery includes any hand implement used in preparing, \
serving, and especially eating food in the Western world.\"\>", 
    "\[Rule]", "\<\"cutlery\"\>"}], ",", 
   RowBox[{"\<\"In geometry, a hexagon (from Greek \:1f15\[Xi] hex, \\\"six\\\
\" and \[Gamma]\[Omega]\[Nu]\:03af\[Alpha], gon\[IAcute]a, \\\"corner, \
angle\\\") is a six sided polygon or 6-gon.\"\>", 
    "\[Rule]", "\<\"hexagon\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7076582194031963`*^9, 3.7076588808210907`*^9, 
  3.7076589517225113`*^9, 3.7076592201486616`*^9, 3.707659260419941*^9, 
  3.7076594554656734`*^9, 3.707659538851734*^9, 3.707682867249852*^9, 
  3.7076979818815374`*^9, 3.7077383665818834`*^9, 
  3.707771626271632*^9},ExpressionUUID->"1dcd01eb-f3be-4b32-8ac8-\
3f1c233623e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Oxford Dictionary", "Subsubsection",
 CellChangeTimes->{{3.707663811830091*^9, 
  3.7076638182499723`*^9}},ExpressionUUID->"ffb47677-a5c2-4035-a3cf-\
b42dec0d7a15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"oxfordRaw", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<Personal\\\\WSS\\\\wss_project\\\\Oxford English Dictionary.txt\>\"",
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7076611528289022`*^9, 3.707661169612772*^9}, {
  3.707661268687351*^9, 3.7076612730509396`*^9}, {3.7076613103905125`*^9, 
  3.7076613332743783`*^9}},ExpressionUUID->"cd54a767-046f-4e1e-874b-\
042929bf0ab3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"TextSentences", "[", 
   RowBox[{"oxfordRaw", ",", "10"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.7076613548635464`*^9, 
  3.7076613980244865`*^9}},ExpressionUUID->"b68cf505-1810-4c0f-8b28-\
4599cbec9919"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"A \"\>"},
     {"\<\"A-  prefix (also an- before a vowel sound) not, without \
(amoral).\"\>"},
     {"\<\"[greek]\"\>"},
     {"\<\"Aa  abbr. 1 automobile association.\"\>"},
     {"\<\"2 alcoholics anonymous.\"\>"},
     {"\<\"3 anti-aircraft.\"\>"},
     {"\<\"Aardvark  n. Mammal with a tubular snout and a long tongue, \
feeding on termites.\"\>"},
     {"\<\"[afrikaans]\"\>"},
     {"\<\"Ab-  prefix off, away, from (abduct).\"\>"},
     {"\<\"[latin]\"\>"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.707661377289118*^9, 3.707661398793604*^9}, 
   3.707682877515768*^9, 
   3.7076980069179187`*^9},ExpressionUUID->"3de65104-9960-450c-8dc7-\
1686090aabf6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"parseOxford", "[", "word_", "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"StringTrim", "[", 
     RowBox[{"#", ",", 
      RowBox[{
      "RegularExpression", "[", "\"\<\[AHat]\.80\.94\\\\w.\\\\s*|B|\\\\.\>\"",
        "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"TextSentences", "[", 
       RowBox[{
        RowBox[{"StringTrim", "[", 
         RowBox[{
          RowBox[{"StringDelete", "[", 
           RowBox[{
            RowBox[{"FindList", "[", 
             RowBox[{
             "\"\<Personal\\\\WSS\\\\wss_project\\\\Oxford English \
Dictionary.txt\>\"", ",", 
              RowBox[{"Capitalize", "[", "word", "]"}], ",", 
              RowBox[{"AnchoredSearch", "\[Rule]", "True"}], ",", 
              RowBox[{"WordSearch", "\[Rule]", "True"}]}], "]"}], ",", 
            RowBox[{
            "RegularExpression", "[", 
             "\"\<\\\\([-|\\\\w| |\\\\.]*\\\\)|e.g.|esp.|\\\\d+|\\\\sn\\\\.|-\
\\\\S+|\\\\[[\\\\w| |\\\\W]*\\\\]\>\"", "]"}]}], "]"}], ",", 
          RowBox[{"RegularExpression", "[", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"\"\<, | \>\"", ",", "\"\<|B|\>\"", ",", 
             RowBox[{"Capitalize", "[", "word", "]"}]}], "]"}], "]"}]}], 
         "]"}], ",", "10"}], "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"WordCount", "[", "#", "]"}], ">", "2"}], "&"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.707663581496396*^9, 3.7076636063997774`*^9}, {
   3.7076636553781137`*^9, 3.7076636694748116`*^9}, {3.7076640909195137`*^9, 
   3.707664095446867*^9}, {3.7076642661045027`*^9, 3.70766429156866*^9}, {
   3.7076708570650578`*^9, 3.7076708905463867`*^9}, {3.7076709778476067`*^9, 
   3.7076709864847126`*^9}, {3.707671585985607*^9, 3.707671587183454*^9}, {
   3.707671924755704*^9, 3.7076719293259225`*^9}, 3.7076746895849433`*^9, {
   3.707677537733904*^9, 3.707677577724516*^9}, 3.707677706996434*^9, {
   3.707680953377164*^9, 3.707680963144655*^9}, 3.7076810310177016`*^9, {
   3.7076811553495927`*^9, 3.70768115723778*^9}, 3.7076812953297424`*^9, {
   3.7076822843548675`*^9, 3.707682286722603*^9}, {3.7076823243876495`*^9, 
   3.7076823305420866`*^9}, 3.7076823624642525`*^9, {3.707682412613125*^9, 
   3.7076824210050383`*^9}, {3.7076828908223743`*^9, 3.707682925094008*^9}, 
   3.707683393032675*^9, {3.7076835993718643`*^9, 3.7076836359743557`*^9}, {
   3.707683675655645*^9, 3.7076836839812217`*^9}, 3.7076837197368507`*^9, {
   3.707683778266635*^9, 3.7076837812162104`*^9}, 3.7076838741934557`*^9, {
   3.7076841028117433`*^9, 3.707684103306567*^9}, {3.7076853215210056`*^9, 
   3.7076853417330065`*^9}},ExpressionUUID->"aac2ea9a-2a45-4ee7-bcdb-\
885621302009"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"oxford", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"parseOxford", "[", "#", "]"}], "\[Rule]", "#"}], "]"}], "&"}],
     "/@", "randSample"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7076636781531706`*^9, 3.707663684655657*^9}, {
  3.7076640277767744`*^9, 3.707664104105357*^9}, {3.707664761663352*^9, 
  3.7076647711425257`*^9}, {3.7076648537010455`*^9, 3.707664854830393*^9}, {
  3.707667021677621*^9, 3.7076670446277704`*^9}, {3.707667119286585*^9, 
  3.7076671207653427`*^9}, {3.7076674243547497`*^9, 3.707667438590933*^9}, {
  3.707667490480094*^9, 3.707667524968763*^9}, {3.7076708715137777`*^9, 
  3.7076708750259438`*^9}, {3.7076710332487974`*^9, 3.707671123319897*^9}, {
  3.707671407588086*^9, 3.707671439373234*^9}, {3.7076714838824673`*^9, 
  3.707671520981017*^9}, {3.7076779001031666`*^9, 3.7076779059464445`*^9}, {
  3.7076780365682707`*^9, 
  3.707678055013386*^9}},ExpressionUUID->"45946ac4-f683-446f-9ddd-\
089b023beb28"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"Market in muslim countries\"\>", "\[Rule]", "\<\"souk\"\>"}], 
   ",", 
   RowBox[{"\<\"excluding other things\"\>", "\[Rule]", "\<\"exclusive\"\>"}],
    ",", 
   RowBox[{"\<\"y of) not including; except for\"\>", 
    "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"tending to exclude others,  Socially\"\>", 
    "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"high  not obtainable elsewhere or not published \
elsewhere\"\>", "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"Published by only one newspaper etc. \.7f exclusively adv. \
Exclusiveness Exclusivity\"\>", "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"racken   large coarse fern\"\>", 
    "\[Rule]", "\<\"bracken\"\>"}], ",", 
   RowBox[{"\<\"mass of these\"\>", "\[Rule]", "\<\"bracken\"\>"}], ",", 
   RowBox[{"\<\"paralysis,  With involuntary tremors\"\>", 
    "\[Rule]", "\<\"palsy\"\>"}], ",", 
   RowBox[{"\<\"(  affect with palsy\"\>", "\[Rule]", "\<\"palsy\"\>"}], ",", 
   RowBox[{"\<\"Knives, forks, and spoons for use at table\"\>", 
    "\[Rule]", "\<\"cutlery\"\>"}], ",", 
   RowBox[{"\<\"Plane figure with six sides and angles\"\>", 
    "\[Rule]", "\<\"hexagon\"\>"}], ",", 
   RowBox[{"\<\"\.7f hexagonal adj\"\>", "\[Rule]", "\<\"hexagon\"\>"}], ",", 
   RowBox[{"\<\"Plane figure with six sides and angles\"\>", 
    "\[Rule]", "\<\"hexagon\"\>"}], ",", 
   RowBox[{"\<\"\.7f hexagonal adj\"\>", "\[Rule]", "\<\"hexagon\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7076640552021685`*^9, 3.7076641044460583`*^9}, {
   3.7076642700032167`*^9, 3.7076642942460475`*^9}, {3.7076647646228485`*^9, 
   3.70766477230766*^9}, 3.7076648558433285`*^9, 3.707667046565996*^9, 
   3.707667121226262*^9, {3.7076674250437994`*^9, 3.707667439150135*^9}, {
   3.7076674919295464`*^9, 3.707667526156637*^9}, 3.7076708755751457`*^9, 
   3.707670993801903*^9, {3.7076710422612157`*^9, 3.707671079333451*^9}, 
   3.7076711246152534`*^9, 3.707671412506116*^9, 3.70767152391617*^9, 
   3.7076715931053762`*^9, 3.7076719331447*^9, 3.707674694780265*^9, {
   3.707677567453474*^9, 3.7076775932265587`*^9}, 3.707677724496952*^9, 
   3.707677906579664*^9, {3.7076780398147516`*^9, 3.7076780555687466`*^9}, 
   3.7076809704242787`*^9, 3.7076822912394176`*^9, {3.7076828865383472`*^9, 
   3.7076828980112395`*^9}, 3.7076829317721534`*^9, 3.7076835381965446`*^9, 
   3.7076837865487537`*^9, 3.7076838786533813`*^9, 3.7076841072557864`*^9, {
   3.7076853340241957`*^9, 3.707685346542012*^9}, 3.707698059321074*^9, 
   3.70773847327046*^9, 
   3.7077716466442246`*^9},ExpressionUUID->"5d558376-5a48-4047-85fd-\
13297489b2aa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Webster Dictionary", "Subsubsection",
 CellChangeTimes->{{3.7076877808629827`*^9, 
  3.707687785150221*^9}},ExpressionUUID->"cc748a63-bed7-4f8c-94b2-\
56975d90ee67"],

Cell[BoxData[
 RowBox[{
  RowBox[{"websterRaw", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<Personal\\\\WSS\\\\wss_project\\\\Webster English \
Dictionary.txt\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.707687902408718*^9, 3.7076879174991984`*^9}, {
  3.707687962929822*^9, 3.707687965088128*^9}, {3.707688049206973*^9, 
  3.7076880545883436`*^9}},ExpressionUUID->"32851511-5082-41ee-ac13-\
098b25abbff6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FindList", "[", 
  RowBox[{
  "\"\<Personal\\\\WSS\\\\wss_project\\\\Webster English Dictionary.txt\>\"", 
   ",", 
   RowBox[{"ToUpperCase", "[", "\"\<discipline\>\"", "]"}], ",", "10", ",", 
   RowBox[{"WordSearch", "\[Rule]", "True"}], ",", 
   RowBox[{"RecordSeparators", "\[Rule]", 
    RowBox[{"{", "\"\<.\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7076879317788286`*^9, 3.7076879326096635`*^9}, {
  3.707687967908409*^9, 3.707688042072513*^9}, {3.7076880926040792`*^9, 
  3.707688094203264*^9}, {3.707688152303053*^9, 3.7076881533145266`*^9}, {
  3.7076889762589364`*^9, 3.7076889794418917`*^9}, {3.707689112985423*^9, 
  3.7076891144111595`*^9}},ExpressionUUID->"1e4939fc-6477-4e69-b739-\
4cc01e22cc32"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.7076879375105443`*^9, {3.7076880323802443`*^9, 3.7076880444374247`*^9}, 
   3.7076880949493923`*^9, 3.7076881545508213`*^9, 3.7076889806667986`*^9, 
   3.707689115506141*^9},ExpressionUUID->"ee5fd664-9fcc-402d-b0b6-\
490abeeb144c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"isDef", "[", "text_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", 
      RowBox[{"StringCases", "[", 
       RowBox[{"text", ",", 
        RowBox[{
        "RegularExpression", "[", "\"\<^\\\\d+\\\\. |Defn:\>\"", "]"}]}], 
       "]"}], "]"}], ">", "0"}], ",", "True", ",", "False"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7076923695209017`*^9, 3.707692435357909*^9}, {
  3.7076924774182568`*^9, 
  3.707692509796076*^9}},ExpressionUUID->"e901e1f5-d643-412e-b98d-\
af9f9f74e7fa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"isDef", "[", 
  "\"\<Defn: The member of a family whose labor supplies the food of the\n\
family; one who works for his living. H. Spencer.\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.707692278493625*^9, 3.7076923422715216`*^9}, {
  3.707692448858905*^9, 3.7076924517809043`*^9}, {3.707692500085326*^9, 
  3.7076925145575347`*^9}},ExpressionUUID->"76cd8ef3-9465-4528-99d6-\
f2634599eb9f"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.7076923309813695`*^9, 3.7076923536272545`*^9}, 
   3.707692453220255*^9, {3.7076924885030217`*^9, 
   3.7076925149137774`*^9}},ExpressionUUID->"44a8c49f-ce9a-4327-b0a4-\
924508f9c695"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"websterGet", "[", "word_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"stext", ",", "defList", ",", "line"}], "}"}], ",", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Clear", "[", 
       RowBox[{"stext", ",", "defList", ",", "line"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"defList", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stext", "=", 
       RowBox[{
       "OpenRead", "[", 
        "\"\<Personal\\\\WSS\\\\wss_project\\\\Webster English Dictionary.txt\
\>\"", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Find", "[", 
       RowBox[{"stext", ",", 
        RowBox[{"ToUpperCase", "[", "word", "]"}], ",", 
        RowBox[{"WordSearch", "\[Rule]", "True"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Read", "[", 
       RowBox[{"stext", ",", "Record", ",", 
        RowBox[{"RecordSeparators", "\[Rule]", 
         RowBox[{"{", "\"\<\\n\\n\>\"", "}"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"line", "=", "\"\<1. \>\""}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"isDef", "[", 
         RowBox[{"ToString", "[", "line", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"line", "=", 
          RowBox[{"Read", "[", 
           RowBox[{"stext", ",", "Record", ",", 
            RowBox[{"RecordSeparators", "\[Rule]", 
             RowBox[{"{", "\"\<\\n\\n\>\"", "}"}]}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"isDef", "[", 
            RowBox[{"ToString", "[", "line", "]"}], "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"defList", ",", 
             RowBox[{"StringDelete", "[", 
              RowBox[{"line", ",", 
               RowBox[{
               "RegularExpression", "[", "\"\<^\\\\d+\\\\. |Defn:\>\"", 
                "]"}]}], "]"}]}], "]"}], ",", "False"}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "stext", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Select", "[", 
       RowBox[{"defList", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"WordCount", "[", "#", "]"}], ">", "3"}], "&"}]}], "]"}]}], 
     "\[IndentingNewLine]", ")"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707693632785345*^9, 3.7076936392214904`*^9}, {
   3.707693843612747*^9, 3.7076939049525924`*^9}, {3.707693959169388*^9, 
   3.7076940000625596`*^9}, {3.7076940913493233`*^9, 
   3.7076942119977283`*^9}, {3.707694244967167*^9, 3.7076942525964155`*^9}, 
   3.707694313591277*^9, {3.7076944943238254`*^9, 3.7076944971465273`*^9}, {
   3.707694617359579*^9, 3.707694621366888*^9}, {3.7076948321596622`*^9, 
   3.7076948340217714`*^9}, {3.707694997871726*^9, 3.707695008826312*^9}, {
   3.70769513556676*^9, 3.707695157310871*^9}, 3.7076956948204346`*^9, 
   3.7076959250841513`*^9, {3.7076961207666907`*^9, 3.7076961315545225`*^9}, {
   3.707696876911166*^9, 3.707696903935213*^9}, {3.7076971620945263`*^9, 
   3.70769716811633*^9}, {3.707697775145317*^9, 3.7076977786978045`*^9}, {
   3.707697822252584*^9, 
   3.7076978257600574`*^9}},ExpressionUUID->"772dee5f-22b9-4d8e-8621-\
ffd88c893057"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"webster", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"websterGet", "[", "#", "]"}], "\[Rule]", "#"}], "]"}], "&"}], 
    "/@", "randSample"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.707697227981605*^9, 3.7076972369240108`*^9}, {
  3.707697324644348*^9, 3.7076973278185806`*^9}, {3.7076979128625507`*^9, 
  3.7076979169487963`*^9}, {3.7076994486849437`*^9, 
  3.707699472392618*^9}},ExpressionUUID->"b9b093c1-770e-4ca7-b655-\
2011fa594da1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\" The state of being childless.\"\>", 
    "\[Rule]", "\<\"childlessness\"\>"}], ",", 
   RowBox[{"\<\"Having the power of preventing entrance; debarring \
from\\nparticipation or enjoyment; possessed and enjoyed to the exclusion \
of\\nothers; as, exclusive bars; exclusive privilege; exclusive circles \
of\\nsociety.\"\>", "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\"Not taking into the account; excluding from consideration; --\
\\nopposed to inclusive; as, five thousand troops, exclusive \
of\\nartillery.\"\>", "\[Rule]", "\<\"exclusive\"\>"}], ",", 
   RowBox[{"\<\" A brake or fern. Sir W. Scott.\"\>", 
    "\[Rule]", "\<\"bracken\"\>"}], ",", 
   RowBox[{"\<\" Paralysis of the facial nerve, producing distortion of one \
side\\nof the face.\"\>", "\[Rule]", "\<\"palsy\"\>"}], ",", 
   RowBox[{"\<\"The business of a cutler.\"\>", 
    "\[Rule]", "\<\"cutlery\"\>"}], ",", 
   RowBox[{"\<\"Edged or cutting instruments, collectively.\"\>", 
    "\[Rule]", "\<\"cutlery\"\>"}], ",", 
   RowBox[{"\<\" A plane figure of six angles. Regular hexagon, a hexagon \
in\\nwhich the angles are all equal, and the sides are also all equal.\"\>", 
    "\[Rule]", "\<\"hexagon\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7076978435181937`*^9, 3.70769791822843*^9, {3.707699451856353*^9, 
   3.707699474221388*^9}, 3.707738531360035*^9, 
   3.707771673615625*^9},ExpressionUUID->"337e1dad-a0d0-4eb1-85d9-\
810c0089782d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Join Sources", "Subsubsection",
 CellChangeTimes->{{3.7076980703856955`*^9, 
  3.70769808011306*^9}},ExpressionUUID->"904352fa-ca5e-47cc-961a-\
33616d363f44"],

Cell[BoxData[
 RowBox[{
  RowBox[{"joinedSources", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"defWord", ",", "wiki", ",", "oxford", ",", "webster"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.70769808877648*^9, 3.707698139516182*^9}, {
   3.7076981847679205`*^9, 3.707698208410757*^9}, {3.7076982567546153`*^9, 
   3.707698261251403*^9}, 
   3.7076984449404163`*^9},ExpressionUUID->"3fdde3b8-69dd-47b1-a7c5-\
778cdfb12872"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neural Network", "Subsubsection",
 CellChangeTimes->{{3.7076982902992744`*^9, 
  3.707698295738329*^9}},ExpressionUUID->"2aa6c3f5-5210-49f4-bc0a-\
fbb00d561b7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"classes", "=", "randSample"}], ";"}]], "Input",
 CellChangeTimes->{{3.7075943280033493`*^9, 3.7075943357216635`*^9}, {
  3.707698330832122*^9, 
  3.707698331693204*^9}},ExpressionUUID->"fd4fd837-5c35-444a-9dac-\
05e612116011"],

Cell[BoxData[
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"First", "[", "#", "]"}], "&"}], "/@", "joinedSources"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.707740204323446*^9, 
  3.7077402592640467`*^9}},ExpressionUUID->"3bfa2bd8-ba22-4d96-97c0-\
3a3073648cd5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Last", "[", "#", "]"}], "&"}], "/@", "joinedSources"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7077402656789083`*^9, 
  3.707740281036148*^9}},ExpressionUUID->"cd329c88-5c04-407d-957e-\
c99bb7ef6d48"],

Cell["\<\
As a first step in our network, we can encode each noun present in an \
incoming definition; thus creating several unit vectors. \
\>", "Text",
 CellChangeTimes->{{3.7077432833541145`*^9, 
  3.707743337483038*^9}},ExpressionUUID->"29e0265d-5d1a-499c-bdf6-\
ac862c33cd71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"enc", "@", "#"}], "&"}], "/@", 
   RowBox[{"TextCases", "[", 
    RowBox[{
     RowBox[{"input", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Noun\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.707741552377046*^9, 3.7077415574251957`*^9}, {
   3.7077416445230293`*^9, 3.7077416465536222`*^9}, {3.7077416861940126`*^9, 
   3.707741698759074*^9}, {3.707741811817435*^9, 3.707741824589608*^9}, {
   3.707742126998198*^9, 3.707742208002552*^9}, {3.7077423482543783`*^9, 
   3.7077423656069345`*^9}, {3.7077424125005264`*^9, 
   3.7077424169381847`*^9}, {3.7077426378273954`*^9, 3.707742658669203*^9}, 
   3.7077430287599936`*^9},ExpressionUUID->"ad9ce58b-2601-44fd-91c8-\
efc406a8ceae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "17726", "}"}], ",", 
   RowBox[{"{", "22534", "}"}], ",", 
   RowBox[{"{", "24409", "}"}], ",", 
   RowBox[{"{", "359", "}"}], ",", 
   RowBox[{"{", "14273", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7077426414846716`*^9, 3.7077426598430676`*^9}, 
   3.7077430325602207`*^9, {3.707756897832229*^9, 3.7077569186681886`*^9}, 
   3.70776840004284*^9},ExpressionUUID->"2157dcfa-ab48-4899-b975-\
383631c44ecd"]
}, Open  ]],

Cell["\<\
As our first layer we can have a TotalLayer[] which performs elementwise \
addition between incoming tensors. In this case, this will sum every Noun \
passed, thus creating a keyword vector version of the sentence. So for this \
sentence vector corresponds only 1 word vector as output. \
\>", "Text",
 CellChangeTimes->{{3.707743343434769*^9, 
  3.707743511904027*^9}},ExpressionUUID->"3734ad27-0614-4245-9d67-\
d1c364cc3d31"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tot", "=", 
  RowBox[{"TotalLayer", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.7077422685988503`*^9, 3.707742282491084*^9}, {
   3.707742323007796*^9, 3.7077423573950033`*^9}, 3.7077432551028504`*^9, {
   3.7077691762368717`*^9, 3.7077691775321517`*^9}, {3.7077694041486216`*^9, 
   3.70776940581701*^9}},ExpressionUUID->"28231664-b7d0-4116-9d53-\
f10b2c344be6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["TotalLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox["none", 
                  GrayLevel[0.5]], ""}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox["none", 
                  GrayLevel[0.5]], ""}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\"list of \"", "\"tensor\"", "\"s\""}, 
                   "RowDefault"], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"tensor\"", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("TotalLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.7077432706342893`*^9, 3.707756923136611*^9, 
  3.707769178508975*^9, 
  3.7077694068313456`*^9},ExpressionUUID->"2f8a8c32-4b25-4c15-8ed0-\
4912a5c1dfad"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"sum", "=", 
   RowBox[{"tot", "@", "test"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7077423606101656`*^9, 3.7077423684072294`*^9}, {
   3.7077431335954466`*^9, 3.7077431376073847`*^9}, {3.707756926596552*^9, 
   3.707756948575699*^9}, 3.7077691829336205`*^9, 
   3.7077694149848285`*^9},ExpressionUUID->"11d16e01-0e87-4900-9dc0-\
2fd45069b722"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Lets try with Embedding", "Subsubsection",
 CellChangeTimes->{{3.707760259555888*^9, 
  3.7077602638826838`*^9}},ExpressionUUID->"bbf59c34-49aa-49f3-bd79-\
be565217840a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"enc", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Tokens\>\"", ",", "wordList"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7077552926195745`*^9, 3.7077552981687737`*^9}, 
   3.7077553324745874`*^9, {3.7077676971305733`*^9, 3.707767702250062*^9}, {
   3.707767974869996*^9, 
   3.707767975819558*^9}},ExpressionUUID->"7c3f404a-f5fc-46fc-9f2f-\
b8e95d330ff8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Tokens\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Tokens\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              PaneBox[
               StyleBox[
                RowBox[{"\[LeftSkeleton]", 
                  TemplateBox[{"25133", "\" strings\""}, "RowDefault"], 
                  "\[RightSkeleton]"}], ShowStringCharacters -> False, 
                StripOnInput -> False], 
               BaseStyle -> {
                IndentMaxFraction -> 0.1, ShowStringCharacters -> True}, 
               ImageSize -> {250}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"SplitPattern\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              PaneBox[
              "WordBoundary", 
               BaseStyle -> {
                IndentMaxFraction -> 0.1, ShowStringCharacters -> True}, 
               ImageSize -> {250}], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"IgnoreCase\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["True", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Count\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["25134", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TemplateBox[{"\"seq. of \"", 
                StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"", 
                TemplateBox[{"\"indices\"", "\" \"", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"range\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"1", "\"..\"", "25134"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                   GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
               "RowDefault"], "SummaryItem"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}], BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.7077553038080406`*^9, 3.707755332920012*^9}, 
   3.707757061917094*^9, 3.707767703029337*^9, {3.7077679550794744`*^9, 
   3.707767976680828*^9}, 
   3.7077717048805246`*^9},ExpressionUUID->"65eab926-eb33-401b-aef8-\
042ec61097a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dec", "=", 
  RowBox[{"NetDecoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Class\>\"", ",", "classes"}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7077602758307915`*^9, 3.7077602807838674`*^9}, {
  3.7077678355784707`*^9, 
  3.7077678529416685`*^9}},ExpressionUUID->"c2538d1d-edd3-4543-b93d-\
a7ca92111f85"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetDecoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      PanelBox[
       GridBox[{{
          GridBox[{{
             StyleBox[
              TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["\"Class\"", "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Labels\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox[
              TagBox[
               RowBox[{"{", 
                 RowBox[{"\"souk\"", ",", 
                   RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",", 
                   "\"hexagon\""}], "}"}], Short[#, 0.5]& ], "SummaryItem"]}, {
             StyleBox[
              TemplateBox[{"\"Dimensions\"", "\":\""}, "RowDefault"], 
              "SummaryItemAnnotation"], 
             StyleBox["10", "SummaryItem"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
        GridBoxAlignment -> {"Rows" -> {{Top}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        BaselinePosition -> {1, 1}], BaselinePosition -> Baseline, 
       BaseStyle -> {
        ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
         3, ShowSyntaxStyles -> False}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetDecoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.707760289322666*^9, {3.70776784129629*^9, 3.7077678537506657`*^9}, 
   3.707767978844185*^9, 
   3.7077717070107536`*^9},ExpressionUUID->"4b7e5043-f1a4-405e-b465-\
dc9a1996c419"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bla", "=", 
  RowBox[{"enc", "@", 
   RowBox[{"input", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.707755345577561*^9, 3.707755368023841*^9}, {
   3.707755404488614*^9, 3.707755405326065*^9}, {3.707756267615513*^9, 
   3.707756287487462*^9}, {3.707757136059537*^9, 3.7077571376260996`*^9}, 
   3.7077615409334564`*^9, {3.707767963055008*^9, 3.707767963770671*^9}, {
   3.707768019351658*^9, 
   3.707768024799888*^9}},ExpressionUUID->"6ce4ce64-c2c6-4e9d-bc67-\
ea09c3a800f1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "25134", ",", "17726", ",", "25134", ",", "25134", ",", "25134", ",", 
   "20159", ",", "25134", ",", "22534", ",", "25134", ",", "24409", ",", 
   "25134", ",", "359", ",", "25134", ",", "25134", ",", "25134", ",", "1", 
   ",", "14273"}], "}"}]], "Output",
 CellChangeTimes->{
  3.707761541302478*^9, {3.7077679339469004`*^9, 3.707767980955038*^9}, {
   3.707768021623984*^9, 
   3.707768025494179*^9}},ExpressionUUID->"1a559273-948a-4c5e-ac01-\
83e17151dcce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"embed", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"EmbeddingLayer", "[", 
    RowBox[{"50", ",", "25134"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7077556649149437`*^9, 3.7077556872862844`*^9}, {
  3.707755726353608*^9, 3.707755728413245*^9}, {3.7077560024926677`*^9, 
  3.707756020775233*^9}, {3.7077561349934964`*^9, 3.70775614793078*^9}, {
  3.707768146961277*^9, 
  3.707768153848832*^9}},ExpressionUUID->"e7e091f4-b526-4d97-b4f1-\
4ee44730152a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["EmbeddingLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"OutputDimension\"", "\":\""}, "RowDefault"],
                   "SummaryItemAnnotation"], 
                 StyleBox["50", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"ClassCount\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["25134", "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  TemplateBox[{"\"OutputDimension\"", "\":\""}, "RowDefault"],
                   "SummaryItemAnnotation"], 
                 StyleBox["50", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"ClassCount\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["25134", "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Weights\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"25134\"", "\"50\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                   "CacheGraphics" -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  InterpretationBox[
                  "\"tensor of \\!\\(\\*RowBox[{\\\"\\\\\\\"integers between \
1 and \\\\\\\\!\\\\\\\\(\\\\\\\\*RowBox[{\\\\\\\\\\\\\\\"25134\\\\\\\\\\\\\\\"\
}]\\\\\\\\)\\\\\\\"\\\"}]\\)\"", 
                   StringForm["`` of ``", "tensor", 
                    StringForm["`` between 1 and ``", "integers", 25134]], 
                   Editable -> False], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  InterpretationBox[
                  "\"tensor of rank \[GreaterEqual] \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\"", 
                   StringForm["`` of rank \[GreaterEqual] ``", "tensor", 1], 
                   Editable -> False], "SummaryItem"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("EmbeddingLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.70775569003528*^9, 3.7077557292416506`*^9, {3.7077560041623335`*^9, 
   3.707756021359662*^9}, 3.7077561518710313`*^9, 3.707757068235637*^9, {
   3.7077681479155235`*^9, 
   3.70776815481623*^9}},ExpressionUUID->"5e68acbf-1691-4c35-9a2e-\
4a412fa189d0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"test", "=", 
   RowBox[{"embed", "@", "bla"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7077571126446915`*^9, 3.707757117275077*^9}, 
   3.70775715271727*^9, {3.70775728083716*^9, 3.707757282012678*^9}, {
   3.70776154680078*^9, 3.7077615974351997`*^9}, 3.70776815937886*^9, 
   3.707768208242692*^9, 3.7077682823126726`*^9, 3.7077683414721675`*^9, {
   3.7077688457769623`*^9, 3.707768856598009*^9}, {3.707769232593034*^9, 
   3.7077692373436575`*^9}},ExpressionUUID->"7bb81a1f-81b2-4652-8276-\
bf87e8f9720c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"defVec", "=", 
  RowBox[{"tot", "@", "test"}]}]], "Input",
 CellChangeTimes->{{3.707757289562768*^9, 3.7077572927766685`*^9}, {
  3.707761633899767*^9, 
  3.7077616362513227`*^9}},ExpressionUUID->"267ed6ba-1aae-4b3d-b46b-\
ac9fa811044c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.06452783802524209`"}], ",", "0.006957790785236284`", ",", 
   "0.09394621662795544`", ",", 
   RowBox[{"-", "0.012355910846963525`"}], ",", "0.021584632340818644`", ",", 
   RowBox[{"-", "0.02978982962667942`"}], ",", 
   RowBox[{"-", "0.13755691633559763`"}], ",", 
   RowBox[{"-", "0.1551005276851356`"}], ",", 
   RowBox[{"-", "0.018394138664007187`"}], ",", 
   RowBox[{"-", "0.16718041663989425`"}], ",", 
   RowBox[{"-", "0.13739390793489292`"}], ",", "0.0872790448484011`", ",", 
   RowBox[{"-", "0.06230715336278081`"}], ",", 
   RowBox[{"-", "0.0017582620494067669`"}], ",", 
   RowBox[{"-", "0.0772313519846648`"}], ",", "0.01662321946787415`", ",", 
   "0.0826672242837958`", ",", "0.028874530689790845`", ",", 
   "0.15291459718719125`", ",", "0.10178960219491273`", ",", 
   "0.15087353015042027`", ",", 
   RowBox[{"-", "0.013551661977544427`"}], ",", 
   RowBox[{"-", "0.09984133453690447`"}], ",", "0.045988352852873504`", ",", 
   RowBox[{"-", "0.06559572089463472`"}], ",", 
   RowBox[{"-", "0.08387288585072383`"}], ",", "0.06301192753016949`", ",", 
   RowBox[{"-", "0.17365886503830552`"}], ",", "0.006309454096481204`", ",", 
   RowBox[{"-", "0.12065748544409871`"}], ",", 
   RowBox[{"-", "0.1133816075453069`"}], ",", 
   RowBox[{"-", "0.09641386335715652`"}], ",", 
   RowBox[{"-", "0.04747395310550928`"}], ",", "0.011956881266087294`", ",", 
   RowBox[{"-", "0.15245515780407004`"}], ",", "0.08859477529767901`", ",", 
   "0.10629123957187403`", ",", 
   RowBox[{"-", "0.12117597657925216`"}], ",", "0.1666532972594723`", ",", 
   RowBox[{"-", "0.036535810213536024`"}], ",", "0.16123412339948118`", ",", 
   RowBox[{"-", "0.06707013782579452`"}], ",", "0.03666057882946916`", ",", 
   RowBox[{"-", "0.014864301541820168`"}], ",", 
   RowBox[{"-", "0.06703837617533281`"}], ",", 
   RowBox[{"-", "0.025190395768731833`"}], ",", "0.1010661767795682`", ",", 
   "0.10420034499838948`", ",", 
   RowBox[{"-", "0.08950677595566958`"}], ",", "0.15064235986210406`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.707757294439113*^9, 3.707761601622266*^9, 
  3.707761636821677*^9, 3.7077682330806684`*^9, 3.707769241741227*^9, 
  3.7077694193142395`*^9},ExpressionUUID->"24c1fe50-f726-4704-abf6-\
8d9a278bcd33"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tot", "@", "defVec"}]], "Input",
 CellChangeTimes->{{3.707761640031725*^9, 
  3.7077616439839625`*^9}},ExpressionUUID->"ea882163-01c0-44b4-b0ad-\
bf38524a44e4"],

Cell[BoxData[
 RowBox[{"-", "0.4657606624496111`"}]], "Output",
 CellChangeTimes->{3.7077616444485846`*^9, 
  3.7077682383091097`*^9},ExpressionUUID->"02f28630-e432-4072-9d21-\
2704410e1fde"]
}, Open  ]],

Cell["The Network:", "Text",
 CellChangeTimes->{{3.707756743155881*^9, 
  3.7077567458894873`*^9}},ExpressionUUID->"618a79b1-0fc8-4768-b22b-\
98a74af619e9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetGraph", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<|", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\"\<embedding\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{"EmbeddingLayer", "[", "500", "]"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"\"\<classifier\>\"", "\[Rule]", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LongShortTermMemoryLayer", "[", "500", "]"}], ",", 
         RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
         RowBox[{"LinearLayer", "[", 
          RowBox[{"Length", "[", "classes", "]"}], "]"}], ",", 
         RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "|>"}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", " ", 
      RowBox[{"\"\<embedding\>\"", "\[Rule]", " ", 
       RowBox[{"\"\<classifier\>\"", "\[Rule]", " ", 
        RowBox[{"NetPort", "[", "\"\<Output\>\"", "]"}]}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", "enc"}], ",", 
    RowBox[{"\"\<Output\>\"", "\[Rule]", " ", "dec"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQfV/DSPrP/NeOibGXFUH0t5XrJf4B6d2CJXIgerkm
uzaI9tg/C0xfKOjqYVjw2jEiNLkPRLdxG0wD0WIXHcG01MTYBSD6gMaKhSB6
h7HEMhAtbKawHERrcJtsANGn5r/eDaIZ0mQvgOhpn/XBdPtNi+sgennuzOdg
+fSOV4xAuuYo+2sQPeHN53cges3/H2Bax/muJBOQFvRnlgPRDKEWXiC64/JU
MP1gfWwyiL6pVpUBos1Kts0H0fVbLi4H0d/Cjj0B0R9i2J+C6AmtdebMQNr4
tpwFiP6wgtEbRD+SdgPTblcuLgfR4bxOK0A0AKL+nGY=
  "],ExpressionUUID->"e5c5f393-93b3-483b-bd14-b8d3f5e945e6"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = None}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "Input", "embedding", "classifier", "Output"}, {Null, 
               GrayLevel[0]}, {1, 2, 2, 1}, {Null, NetChain}, {
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[497024800]}, 
                NeuralNetworks`IndexIntegerT[25134]], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[497024800], 500}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]}, {None, 
               NeuralNetworks`Private`UniqueSkeleton[1, 8635], 
               NeuralNetworks`Private`UniqueSkeleton[4, 63158], None}]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Nodes", "embedding"], 
                 NeuralNetworks`NetPath["Nodes", "classifier"], 
                 NeuralNetworks`NetPath["Outputs", "Output"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association["Input" -> NetEncoder["Tokens", 
                  Association["Tokens" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`TokenEncodingData[1, 
                    ByteArray[CompressedData["
1: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
                    "]], 25133]], "SplitPattern" -> 
                   NeuralNetworks`ValidatedParameter[WordBoundary], 
                   "IgnoreCase" -> True, "Count" -> 25134], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800]}, 
                   NeuralNetworks`IndexIntegerT[25134]]]], 
               Association["Output" -> NetDecoder["Class", 
                  Association[
                  "Labels" -> {
                    "souk", "leafing", "childlessness", "purine", "exclusive",
                     "bracken", "accusal", "palsy", "cutlery", "hexagon"}, 
                   "Dimensions" -> 10], 
                  NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
               Association[
               "embedding" -> 
                Association[
                 "Type" -> "Chain", "Nodes" -> 
                  Association[
                   "1" -> Association[
                    "Type" -> "Embedding", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{25134, 500}, 
                    NeuralNetworks`RealT]], "Parameters" -> 
                    Association[
                    "OutputDimension" -> 500, "ClassCount" -> 25134, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[497024800]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800]}, 
                    NeuralNetworks`IndexIntegerT[25134]]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]]]], 
                  "Edges" -> {
                   NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800]}, 
                    NeuralNetworks`IndexIntegerT[25134]]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]]], "classifier" -> 
                Association[
                 "Type" -> "Chain", "Nodes" -> 
                  Association[
                   "1" -> Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "InputGateBiases" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`TensorT[{500, 500}, NeuralNetworks`RealT], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Parameters" -> 
                    Association[
                    "OutputSize" -> 500, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    500, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[497024800]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{10, 500}, NeuralNetworks`RealT], 
                    "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                  "Edges" -> {
                   NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                  "InteriorStates" -> 
                  Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    1, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "States", "CellState"]]]]], Alignment -> 
              Center], Nothing]}], 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{234., {35., 41.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.707756804765663*^9, 3.7077568156917744`*^9}, 
   3.707760887176714*^9, 3.707760991338271*^9, 3.707765955716629*^9, 
   3.7077665982208576`*^9, 3.7077682465415707`*^9, 3.707768665270747*^9, 
   3.7077686965318108`*^9, {3.7077690504259853`*^9, 3.7077690731953087`*^9}, 
   3.7077696216176805`*^9, {3.7077696555290823`*^9, 3.7077696688800945`*^9}, {
   3.7077701194052496`*^9, 3.707770175193158*^9}, 3.7077706651677155`*^9, 
   3.707771330673544*^9, 3.7077714826385098`*^9, 3.707771716241906*^9, 
   3.7077722274669886`*^9},ExpressionUUID->"f9beb4dc-70d8-4593-9ea1-\
21473300be76"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"trainData", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"defWord", ",", "wiki", ",", "webster"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testData", "=", "oxford"}], ";"}]}], "Input",
 CellChangeTimes->{{3.707770801555929*^9, 
  3.7077708612538805`*^9}},ExpressionUUID->"56b9163c-ba41-4b0e-8010-\
15f57bd03cf3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "trainData", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "testData"}], ",", 
    RowBox[{"MaxTrainingRounds", "\[Rule]", "100"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7077707831911697`*^9, 3.7077707911094275`*^9}, {
  3.707770869874171*^9, 3.707770914724906*^9}, {3.707771206267997*^9, 
  3.707771235976327*^9}, {3.7077714864761353`*^9, 
  3.707771487136063*^9}},ExpressionUUID->"1134945c-14e8-411c-a3bc-\
1fbcc7d1bfa3"],

Cell[BoxData[
 StyleBox[
  TagBox[
   TagBox[
    RowBox[{"NetGraph", 
     RowBox[{"[", 
      PanelBox[
       DynamicModuleBox[{NeuralNetworks`Private`NetGraph`selection = None}, 
        DynamicBox[GridBox[
          Map[List, {
            ToBoxes[
             
             NeuralNetworks`Private`NetGraph`netLayerPlot[{{1, 2}, {2, 3}, {3,
               4}}, 
              Dynamic[NeuralNetworks`Private`NetGraph`selection], False, {
              "Input", "embedding", "classifier", "Output"}, {Null, 
               GrayLevel[0]}, {1, 2, 2, 1}, {Null, NetChain}, {
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[497024800]}, 
                NeuralNetworks`IndexIntegerT[25134]], 
               NeuralNetworks`TensorT[{
                 NeuralNetworks`LengthVar[497024800], 500}, 
                NeuralNetworks`RealT], 
               NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]}, {None, 
               NeuralNetworks`Private`UniqueSkeleton[1, 55075], 
               NeuralNetworks`Private`UniqueSkeleton[4, 27926], None}]], 
            If[
             IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
             ItemBox[
              NeuralNetworks`Private`NetGraph`vpathInfo[
               Part[{
                 NeuralNetworks`NetPath["Inputs", "Input"], 
                 NeuralNetworks`NetPath["Nodes", "embedding"], 
                 NeuralNetworks`NetPath["Nodes", "classifier"], 
                 NeuralNetworks`NetPath["Outputs", "Output"]}, 
                NeuralNetworks`Private`NetGraph`selection], 
               Association["Input" -> NetEncoder["Tokens", 
                  Association["Tokens" -> NeuralNetworks`ValidatedParameter[
                    NeuralNetworks`TokenEncodingData[1, 
                    ByteArray[CompressedData["
1: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
                    "]], 25133]], "SplitPattern" -> 
                   NeuralNetworks`ValidatedParameter[WordBoundary], 
                   "IgnoreCase" -> True, "Count" -> 25134], 
                  NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800]}, 
                   NeuralNetworks`IndexIntegerT[25134]]]], 
               Association["Output" -> NetDecoder["Class", 
                  Association[
                  "Labels" -> {
                    "souk", "leafing", "childlessness", "purine", "exclusive",
                     "bracken", "accusal", "palsy", "cutlery", "hexagon"}, 
                   "Dimensions" -> 10], 
                  NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], 
               Association[
               "embedding" -> 
                Association[
                 "Type" -> "Chain", "Nodes" -> 
                  Association[
                   "1" -> Association[
                    "Type" -> "Embedding", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{25134, 500}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimension" -> 500, "ClassCount" -> 25134, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[497024800]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800]}, 
                    NeuralNetworks`IndexIntegerT[25134]]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]]]], 
                  "Edges" -> {
                   NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "Outputs", "Output"]}, "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800]}, 
                    NeuralNetworks`IndexIntegerT[25134]]], "Outputs" -> 
                  Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]]], "classifier" -> 
                Association[
                 "Type" -> "Chain", "Nodes" -> 
                  Association[
                   "1" -> Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyRawArray[{500}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyRawArray[{500}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyRawArray[{500}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyRawArray[{500, 500}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyRawArray[{500}]], 
                    "Parameters" -> 
                    Association[
                    "OutputSize" -> 500, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    500, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[497024800]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "2" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{10, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyRawArray[{10}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {10}, "$OutputSize" -> 10, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]]]], 
                  "Edges" -> {
                   NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                  Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[497024800], 500}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                  Association[
                   "Output" -> 
                    NeuralNetworks`TensorT[{10}, NeuralNetworks`RealT]], 
                  "InteriorStates" -> 
                  Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    1, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "States", "CellState"]]]]], Alignment -> 
              Center], Nothing]}], 
          GridBoxAlignment -> {"Columns" -> {{Left}}}],
         ImageSizeCache->{234., {35., 41.}},
         TrackedSymbols:>{NeuralNetworks`Private`NetGraph`selection}],
        Initialization:>{NetGraph}],
       BaselinePosition->(Top -> Scaled[3])], "]"}]}],
    False],
   Deploy],
  LineBreakWithin->False]], "Output",
 CellChangeTimes->{{3.7077709016984334`*^9, 3.707770923018447*^9}, {
   3.707771222780219*^9, 3.7077712477071753`*^9}, 3.707771358868845*^9, 
   3.707771518835514*^9, 3.7077717487181387`*^9, 
   3.707772316666789*^9},ExpressionUUID->"8cfb2c5e-2ba7-41b1-90d6-\
2b06f22763bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"trainedNet", "[", 
  RowBox[{"\"\<to limit entrance\>\"", ",", "\"\<TopProbabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.70777094012378*^9, 3.7077709449028807`*^9}, {
  3.7077709812549496`*^9, 3.7077710845620375`*^9}, {3.7077711313808537`*^9, 
  3.7077711809685693`*^9}, {3.7077712839103603`*^9, 3.707771314774956*^9}, {
  3.7077714650179987`*^9, 3.707771469621008*^9}, {3.707771529902403*^9, 
  3.707771563038763*^9}, {3.7077717554471736`*^9, 3.7077718279177055`*^9}, {
  3.7077722057307577`*^9, 3.7077722138246713`*^9}, {3.7077723280007534`*^9, 
  3.7077723675854087`*^9}},ExpressionUUID->"f6206b28-3afc-4282-b691-\
57850274e5b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"exclusive\"\>", "\[Rule]", "0.13789628446102142`"}], ",", 
   RowBox[{"\<\"palsy\"\>", "\[Rule]", "0.11821884661912918`"}], ",", 
   RowBox[{"\<\"childlessness\"\>", "\[Rule]", "0.10940422862768173`"}], ",", 
   RowBox[{"\<\"purine\"\>", "\[Rule]", "0.10703490674495697`"}], ",", 
   RowBox[{"\<\"bracken\"\>", "\[Rule]", "0.10334444791078568`"}], ",", 
   RowBox[{"\<\"cutlery\"\>", "\[Rule]", "0.08789150416851044`"}], ",", 
   RowBox[{"\<\"souk\"\>", "\[Rule]", "0.08747036010026932`"}], ",", 
   RowBox[{"\<\"leafing\"\>", "\[Rule]", "0.08601108193397522`"}], ",", 
   RowBox[{"\<\"hexagon\"\>", "\[Rule]", "0.08208681643009186`"}], ",", 
   RowBox[{"\<\"accusal\"\>", "\[Rule]", "0.08064153790473938`"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.7077709838868*^9, 3.7077710467772856`*^9}, {
   3.7077710777716446`*^9, 3.707771085503953*^9}, {3.707771135014244*^9, 
   3.707771181214644*^9}, {3.70777122930544*^9, 3.707771251756438*^9}, {
   3.7077712888376017`*^9, 3.70777131526357*^9}, 3.707771363877002*^9, 
   3.707771470005357*^9, {3.707771523234565*^9, 3.70777156335526*^9}, {
   3.7077717605142155`*^9, 3.7077718281812744`*^9}, 3.707772214221843*^9, {
   3.707772322589775*^9, 
   3.707772368010137*^9}},ExpressionUUID->"51ec3ac5-1671-4ac3-9126-\
934fef545673"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{748, 948},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 162, 3, 70, "Section", "ExpressionUUID" -> \
"651c5174-9df5-4517-be59-22ae51e45987"],
Cell[745, 27, 353, 9, 30, "Input", "ExpressionUUID" -> \
"6a77e2a6-e336-4963-ab87-f6e8ca9d03d4"],
Cell[CellGroupData[{
Cell[1123, 40, 763, 16, 69, "Input", "ExpressionUUID" -> \
"67493797-de1e-48cf-bd40-84f1b6316537"],
Cell[1889, 58, 581, 11, 30, "Output", "ExpressionUUID" -> \
"60f9f0d1-8590-444a-9d7c-12f4313c95b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2507, 74, 161, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"d45502bf-2883-4330-b8e3-b47cfcf41075"],
Cell[2671, 79, 331, 9, 30, "Input", "ExpressionUUID" -> \
"d85cdac3-0a05-49fe-8842-de447922d89a"],
Cell[CellGroupData[{
Cell[3027, 92, 492, 12, 30, "Input", "ExpressionUUID" -> \
"f64781d2-35b5-47e8-9ca5-4e76c3fa9146"],
Cell[3522, 106, 2565, 44, 335, "Output", "ExpressionUUID" -> \
"a43a18a2-23d3-4bb9-be52-e7c7a0048fbb"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6136, 156, 167, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"a2916cdd-a78e-4496-ad19-4a2ffa998215"],
Cell[CellGroupData[{
Cell[6328, 163, 919, 23, 50, "Input", "ExpressionUUID" -> \
"fa7b79bb-7e61-4901-b72d-2a599ba07d3b"],
Cell[7250, 188, 542, 11, 21, "Message", "ExpressionUUID" -> \
"cf03604d-08fc-4195-a44a-6fa336b7b0b6"],
Cell[7795, 201, 2516, 41, 487, "Output", "ExpressionUUID" -> \
"1dcd01eb-f3be-4b32-8ac8-3f1c233623e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[10360, 248, 170, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"ffb47677-a5c2-4035-a3cf-b42dec0d7a15"],
Cell[10533, 253, 422, 10, 30, "Input", "ExpressionUUID" -> \
"cd54a767-046f-4e1e-874b-042929bf0ab3"],
Cell[CellGroupData[{
Cell[10980, 267, 261, 6, 30, "Input", "ExpressionUUID" -> \
"b68cf505-1810-4c0f-8b28-4599cbec9919"],
Cell[11244, 275, 1188, 32, 182, "Output", "ExpressionUUID" -> \
"3de65104-9960-450c-8dc7-1686090aabf6"]
}, Open  ]],
Cell[12447, 310, 2788, 56, 240, "Input", "ExpressionUUID" -> \
"aac2ea9a-2a45-4ee7-bcdb-885621302009"],
Cell[CellGroupData[{
Cell[15260, 370, 1038, 20, 30, "Input", "ExpressionUUID" -> \
"45946ac4-f683-446f-9ddd-089b023beb28"],
Cell[16301, 392, 2676, 46, 202, "Output", "ExpressionUUID" -> \
"5d558376-5a48-4047-85fd-13297489b2aa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19026, 444, 171, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"cc748a63-bed7-4f8c-94b2-56975d90ee67"],
Cell[19200, 449, 417, 10, 30, "Input", "ExpressionUUID" -> \
"32851511-5082-41ee-ac13-098b25abbff6"],
Cell[CellGroupData[{
Cell[19642, 463, 748, 14, 50, "Input", "ExpressionUUID" -> \
"1e4939fc-6477-4e69-b739-4cc01e22cc32"],
Cell[20393, 479, 301, 6, 30, "Output", "ExpressionUUID" -> \
"ee5fd664-9fcc-402d-b0b6-490abeeb144c"]
}, Open  ]],
Cell[20709, 488, 566, 16, 50, "Input", "ExpressionUUID" -> \
"e901e1f5-d643-412e-b98d-af9f9f74e7fa"],
Cell[CellGroupData[{
Cell[21300, 508, 413, 7, 50, "Input", "ExpressionUUID" -> \
"76cd8ef3-9465-4528-99d6-f2634599eb9f"],
Cell[21716, 517, 238, 4, 30, "Output", "ExpressionUUID" -> \
"44a8c49f-ce9a-4327-b0a4-924508f9c695"]
}, Open  ]],
Cell[21969, 524, 3370, 74, 316, "Input", "ExpressionUUID" -> \
"772dee5f-22b9-4d8e-8621-ffd88c893057"],
Cell[CellGroupData[{
Cell[25364, 602, 539, 13, 30, "Input", "ExpressionUUID" -> \
"b9b093c1-770e-4ca7-b655-2011fa594da1"],
Cell[25906, 617, 1494, 27, 240, "Output", "ExpressionUUID" -> \
"337e1dad-a0d0-4eb1-85d9-810c0089782d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27449, 650, 164, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"904352fa-ca5e-47cc-961a-33616d363f44"],
Cell[27616, 655, 433, 10, 30, "Input", "ExpressionUUID" -> \
"3fdde3b8-69dd-47b1-a7c5-778cdfb12872"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28086, 670, 167, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"2aa6c3f5-5210-49f4-bc0a-fbb00d561b7b"],
Cell[28256, 675, 261, 6, 30, "Input", "ExpressionUUID" -> \
"fd4fd837-5c35-444a-9dac-05e612116011"],
Cell[28520, 683, 294, 9, 30, "Input", "ExpressionUUID" -> \
"3bfa2bd8-ba22-4d96-97c0-3a3073648cd5"],
Cell[28817, 694, 294, 9, 30, "Input", "ExpressionUUID" -> \
"cd329c88-5c04-407d-957e-c99bb7ef6d48"],
Cell[29114, 705, 281, 6, 49, "Text", "ExpressionUUID" -> \
"29e0265d-5d1a-499c-bdf6-ac862c33cd71"],
Cell[CellGroupData[{
Cell[29420, 715, 773, 17, 30, "Input", "ExpressionUUID" -> \
"ad9ce58b-2601-44fd-91c8-efc406a8ceae"],
Cell[30196, 734, 469, 11, 30, "Output", "ExpressionUUID" -> \
"2157dcfa-ab48-4899-b975-383631c44ecd"]
}, Open  ]],
Cell[30680, 748, 437, 8, 68, "Text", "ExpressionUUID" -> \
"3734ad27-0614-4245-9d67-d1c364cc3d31"],
Cell[CellGroupData[{
Cell[31142, 760, 389, 7, 30, "Input", "ExpressionUUID" -> \
"28231664-b7d0-4116-9d53-f10b2c344be6"],
Cell[31534, 769, 5002, 112, 70, "Output", "ExpressionUUID" -> \
"2f8a8c32-4b25-4c15-8ed0-4912a5c1dfad"]
}, Open  ]],
Cell[36551, 884, 381, 8, 30, "Input", "ExpressionUUID" -> \
"11d16e01-0e87-4900-9dc0-2fd45069b722"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36969, 897, 176, 3, 39, "Subsubsection", "ExpressionUUID" -> \
"bbf59c34-49aa-49f3-bd79-be565217840a"],
Cell[CellGroupData[{
Cell[37170, 904, 414, 9, 30, "Input", "ExpressionUUID" -> \
"7c3f404a-f5fc-46fc-9f2f-b8e95d330ff8"],
Cell[37587, 915, 3663, 84, 144, "Output", "ExpressionUUID" -> \
"65eab926-eb33-401b-aef8-042ec61097a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41287, 1004, 338, 8, 30, "Input", "ExpressionUUID" -> \
"c2538d1d-edd3-4543-b93d-a7ca92111f85"],
Cell[41628, 1014, 2088, 51, 86, "Output", "ExpressionUUID" -> \
"4b7e5043-f1a4-405e-b465-dc9a1996c419"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43753, 1070, 533, 11, 30, "Input", "ExpressionUUID" -> \
"6ce4ce64-c2c6-4e9d-bc67-ea09c3a800f1"],
Cell[44289, 1083, 504, 11, 50, "Output", "ExpressionUUID" -> \
"1a559273-948a-4c5e-ac01-83e17151dcce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44830, 1099, 486, 10, 30, "Input", "ExpressionUUID" -> \
"e7e091f4-b526-4d97-b4f1-4ee44730152a"],
Cell[45319, 1111, 7587, 164, 86, "Output", "ExpressionUUID" -> \
"5e68acbf-1691-4c35-9a2e-4a412fa189d0"]
}, Open  ]],
Cell[52921, 1278, 545, 10, 30, "Input", "ExpressionUUID" -> \
"7bb81a1f-81b2-4652-8276-bf87e8f9720c"],
Cell[CellGroupData[{
Cell[53491, 1292, 261, 6, 30, "Input", "ExpressionUUID" -> \
"267ed6ba-1aae-4b3d-b46b-ac9fa811044c"],
Cell[53755, 1300, 2288, 41, 145, "Output", "ExpressionUUID" -> \
"24c1fe50-f726-4704-abf6-8d9a278bcd33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56080, 1346, 184, 4, 30, "Input", "ExpressionUUID" -> \
"ea882163-01c0-44b4-b0ad-bf38524a44e4"],
Cell[56267, 1352, 191, 4, 30, "Output", "ExpressionUUID" -> \
"02f28630-e432-4072-9d21-2704410e1fde"]
}, Open  ]],
Cell[56473, 1359, 156, 3, 30, "Text", "ExpressionUUID" -> \
"618a79b1-0fc8-4768-b22b-98a74af619e9"],
Cell[CellGroupData[{
Cell[56654, 1366, 1687, 36, 183, "Input", "ExpressionUUID" -> \
"e5c5f393-93b3-483b-bd14-b8d3f5e945e6"],
Cell[58344, 1404, 150848, 2498, 116, "Output", "ExpressionUUID" -> \
"f9beb4dc-70d8-4593-9ea1-21473300be76"]
}, Open  ]],
Cell[209207, 3905, 370, 10, 50, "Input", "ExpressionUUID" -> \
"56b9163c-ba41-4b0e-8010-15f57bd03cf3"],
Cell[CellGroupData[{
Cell[209602, 3919, 522, 10, 30, "Input", "ExpressionUUID" -> \
"1134945c-14e8-411c-a3bc-1fbcc7d1bfa3"],
Cell[210127, 3931, 150357, 2493, 116, "Output", "ExpressionUUID" -> \
"8cfb2c5e-2ba7-41b1-90d6-2b06f22763bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360521, 6429, 670, 11, 30, "Input", "ExpressionUUID" -> \
"f6206b28-3afc-4282-b691-57850274e5b9"],
Cell[361194, 6442, 1332, 22, 69, "Output", "ExpressionUUID" -> \
"51ec3ac5-1671-4ac3-9126-934fef545673"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

